name: CI — PHP router.php + Node

on:
  push:
    branches:
      - development-testing
  pull_request:
    branches:
      - development-testing

env:
  PHP_SERVER_HOST: 127.0.0.1
  PHP_SERVER_PORT: 8080

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Node for frontend assets
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install JS dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build (optional)
        run: npm run build --if-present

      # PHP (no Composer)
      - name: Set up PHP 8.2
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none
          extensions: curl, mbstring, intl

      # Start PHP built-in server from repo root using your router.php
      - name: Start PHP server (router.php at repo root)
        run: |
          nohup php -S ${PHP_SERVER_HOST}:${PHP_SERVER_PORT} -t . router.php > php-server.log 2>&1 &

      # Wait until the server is ready
      - name: Wait for server
        run: |
          for i in {1..20}; do
            if curl -sSf "http://${PHP_SERVER_HOST}:${PHP_SERVER_PORT}/" >/dev/null; then
              echo "Server is up"; exit 0
            fi
            sleep 1
          done
          echo "Server failed to start."
          echo "==== php-server.log ===="
          cat php-server.log || true
          exit 1

      # Simple smoke test — add more routes as needed
      - name: Smoke tests
        run: |
          base="http://${PHP_SERVER_HOST}:${PHP_SERVER_PORT}"
          test "$(curl -s -o /dev/null -w "%{http_code}" "$base/")" = "200"

      # JS tests, if any
      - name: Run JS tests (optional)
        run: npm test --if-present

      # Keep built assets (optional)
      - name: Upload dist (optional)
        if: success() && hashFiles('dist/**') != ''
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: dist

      # Upload server log on failure (helps debugging)
      - name: Upload server log (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: php-server-log
          path: php-server.log
